name: Full Org Backup

on:
  schedule:
    - cron: "0 * * * *"   # every hour
  workflow_dispatch:       # allow manual run

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Fetch repos from org
        run: |
          MAIN_ORG="main-org"
          BACKUP_ORG="mycompany-backup"

          # Get all repos in main org
          curl -s -H "Authorization: token ${{ secrets.BACKUP_TOKEN }}" \
            "https://api.github.com/orgs/$MAIN_ORG/repos?per_page=100" > repos.json

          cat repos.json | jq -r '.[].name' > repo_list.txt

          while read REPO_NAME; do
            echo "=== Processing $REPO_NAME ==="

            # Check if repo exists in backup org
            STATUS=$(curl -o /dev/null -s -w "%{http_code}" \
              -H "Authorization: token ${{ secrets.BACKUP_TOKEN }}" \
              https://api.github.com/repos/$BACKUP_ORG/$REPO_NAME)

            if [ "$STATUS" -eq 404 ]; then
              echo "Creating backup repo $BACKUP_ORG/$REPO_NAME"
              curl -s -X POST \
                -H "Authorization: token ${{ secrets.BACKUP_TOKEN }}" \
                -H "Accept: application/vnd.github+json" \
                https://api.github.com/orgs/$BACKUP_ORG/repos \
                -d "{\"name\":\"$REPO_NAME\",\"private\":true}"
            fi

            # Mirror push
            git clone --mirror https://github:${{ secrets.BACKUP_TOKEN }}@github.com/$MAIN_ORG/$REPO_NAME.git
            cd $REPO_NAME.git
            git remote add backup https://github:${{ secrets.BACKUP_TOKEN }}@github.com/$BACKUP_ORG/$REPO_NAME.git
            git push --mirror backup
            cd ..
            rm -rf $REPO_NAME.git
          done < repo_list.txt
